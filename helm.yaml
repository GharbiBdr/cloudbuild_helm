steps:
#   - id: "Get service repo SSH key"
#     name: "gcr.io/cloud-builders/gcloud"
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - "gcloud beta secrets versions access latest --secret=${_SSH_KEY} > /root/.ssh/id_github"
#     volumes:
#       - name: "ssh"
#         path: "/root/.ssh"

#   - id: "Set up git with key and domain"
#     name: "gcr.io/cloud-builders/git"
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - |
#         chmod 600 /root/.ssh/id_github
#         cat <<EOF >/root/.ssh/config
#         Hostname github.com
#         IdentityFile /root/.ssh/id_github
#         EOF
#         ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
#     volumes:
#       - name: "ssh"
#         path: "/root/.ssh"

#   - id: "Clone repository"
#     name: "gcr.io/cloud-builders/git"
#     entrypoint: "git"
#     args:
#       - "clone"
#       - "--recurse-submodules"
#       - "ssh://git@github.com/${_REPO_USER}/${_REPO_NAME}"
#     volumes:
#       - name: "ssh"
#         path: "/root/.ssh"

#   - id: "Checkout on specified branch/commit"
#     name: "gcr.io/cloud-builders/git"
#     entrypoint: "git"
#     args: ["checkout", "${_TARGET}"]
#     dir: "${_REPO_NAME}"

#   - id: "Write service env secret to sidespin.env.json"
#     name: "gcr.io/cloud-builders/gcloud"
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - "gcloud beta secrets versions access latest --secret=${_ENV_SECRET} > sidespin.env.json"

#   - id: "Install NodeJS dependencies"
#     name: "node:lts-slim"
#     entrypoint: "npm"
#     args: ["ci", "--production"]
#     dir: "js"

#   - id: "Compose service modules"
#     name: "node:lts-slim"
#     entrypoint: "node"
#     args: ["./js/composeServiceModules.js"]
#     env:
#       - "INTENT=creation"
#       - "PROJECT_ID=${PROJECT_ID}"
#       - "BUILD_ID=${BUILD_ID}"
#       - "REPO_NAME=${_REPO_NAME}"
#       - "NAMESPACE=${_TENANT_ID}"
#       - "DNS_NAME=${_DNS_NAME}"
#       - "DEPLOYMENT_NAME=${_DEPLOYMENT_NAME}"
#       - "DB_HOST_POSTGRES=${_DB_HOST_POSTGRES}"
#       - "DB_NAME_POSTGRES=${_DB_NAME_POSTGRES}"
#       - "DB_PASSWORD_POSTGRES=${_DB_PASSWORD_POSTGRES}"
  
#   - id: "Build docker images and push to GCR"
#     name: "gcr.io/cloud-builders/docker"
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - |
#         for entry in $(cat images-list.txt); do
#           echo "BUILDING IMAGE ${entry%|*} IN FOLDER ${entry#*|}";
#           docker build -t ${entry%|*} ${entry#*|};
#           docker push ${entry%|*};
#         done;
#     dir: "${_REPO_NAME}"
  - name: 'gcr.io/$PROJECT_ID/helm'
    args: ['upgrade', '--install', './helm', '--namespace', '${_TENANT_ID}', '${_DEPLOYMENT_NAME}', "--set", "pubsub", "false"]
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=${_KUBERNETES_ZONE}'
    - 'CLOUDSDK_CONTAINER_CLUSTER=${_KUBERNETES_CLUSTER}'
    - 'TILLERLESS=true'


timeout: 3600s
